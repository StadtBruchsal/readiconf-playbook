- name: Jitsi-Meet Videobridges
  gather_facts: true
  hosts: jitsivideobride
  become: true
  become_user: root
  become_method: sudo
  tasks:
  - name: Set debconf-answers for jitsi-meet
    debconf:
      name: "{{ item.name }}"
      question: "{{ item.question }}"
      value: "{{ item.value }}"
      vtype: "{{ item.vtype }}"
    loop:
      - { name: 'jitsi-videobridge', question: 'jitsi-videobridge/jvb-hostname', value: '{{ frontendserver }}', vtype: 'string' }

  - name: Install Jitsi Videobridge
    package:
      name:
        - jitsi-videobridge2

  - name: Enable REST Api
    lineinfile:
      path: /etc/jitsi/videobridge/config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: '^JVB_OPTS', line: 'JVB_OPTS="--apis=rest"' }
    notify:
      - restart videobridge
    when: "'jitsifrontend' not in group_names"

  - name: Connect Videobridges to master
    lineinfile:
      path: /etc/jitsi/videobridge/sip-communicator.properties
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: '^org.jitsi.videobridge.xmpp.user.shard.HOSTNAME', line: 'org.jitsi.videobridge.xmpp.user.shard.HOSTNAME={{ frontendserver }}' }
      - { regexp: '^org.jitsi.videobridge.xmpp.user.shard.DOMAIN', line: 'org.jitsi.videobridge.xmpp.user.shard.DOMAIN=auth.{{ frontendserver }}' }
      - { regexp: '^org.jitsi.videobridge.xmpp.user.shard.PASSWORD=', line: 'org.jitsi.videobridge.xmpp.user.shard.PASSWORD={{ videobridgepassword }}' }
      - { regexp: '^org.jitsi.videobridge.xmpp.user.shard.MUC_JIDS', line: 'org.jitsi.videobridge.xmpp.user.shard.MUC_JIDS=JvbBrewery@internal.auth.{{ frontendserver }}' }
      - { regexp: '^org.jitsi.videobridge.xmpp.user.shard.DISABLE_CERTIFICATE_VERIFICATION', line: 'org.jitsi.videobridge.xmpp.user.shard.DISABLE_CERTIFICATE_VERIFICATION=true' }
    notify:
      - restart videobridge
  - name: Add Line for JVB_HOST and JVB_HOSTNAME
    lineinfile:
      path: /etc/jitsi/videobridge/config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: '^JVB_HOSTNAME=', line: 'JVB_HOSTNAME="{{ frontendserver }}"' }
      - { regexp: '^JVB_HOST=', line: 'JVB_HOST="{{ frontendserver }}"' }
    notify:
      - restart videobridge

  - name: enable octo
    blockinfile:
      path: /etc/jitsi/videobridge/sip-communicator.properties
      marker: "## {mark} ANSIBLE MANAGED BLOCK ##"
      block: |
        # the address to bind to locally
        org.jitsi.videobridge.octo.BIND_ADDRESS=0.0.0.0
        # the port to bind to
        org.jitsi.videobridge.octo.BIND_PORT=4096
        # the region that the jitsi-videobridge instance is in
        org.jitsi.videobridge.REGION=region1
    notify:
      - restart videobridge

  handlers:
    - name: restart videobridge
      service: 
        name: jitsi-videobridge2
        state: restarted